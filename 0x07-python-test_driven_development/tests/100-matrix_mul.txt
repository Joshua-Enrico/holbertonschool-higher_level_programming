======================
The ``matrix_mul`` module
======================

Using ``matrix_mul``
-------------------

Write a function that multiplies 2 matrices:

	Read: Matrix multiplication - only Matrix product (two matrices)
	Prototype: def matrix_mul(m_a, m_b):

	>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Documentation
=============
Here we verify if our modules an funtions are documented, for holberton requirements is a must.
we use __doc__ to verify module's and function's Documentation

    >>> module_doc = __import__("100-matrix_mul").__doc__
    >>> print(len(module_doc) > 0)
    True

    >>> funciont_doc = __import__("100-matrix_mul").matrix_mul.__doc__
    >>> print(len(funciont_doc) > 0)
    True

General usege
==============

	>>> a = [[3, 2, 1, 5], [9, 1, 3, 0]]	
	>>> b = [[2, 9, 0], [1, 3, 5], [2, 4, 7], [8, 1, 5]]
	>>> matrix_mul(a, b)
	[[50, 42, 42], [25, 96, 26]]

	>>> a = [[1, 2],[2, 3], [1, 2],[2, 3],[1, 2],[2, 3]]
	>>> b = [[1, 2, 3],[1, 2, 3]]
	>>> matrix_mul(a, b)
	[[3, 6, 9], [5, 10, 15], [3, 6, 9], [5, 10, 15], [3, 6, 9], [5, 10, 15]]



Handling Erros
==============
Handling not allowed arguments

	>>> a = 2
	>>> b = [[2, 9, 0], [1, 3, 5], [2, 4, 7], [8, 1, 5]]
	>>> matrix_mul(a, b)
	Traceback (most recent call last):
	TypeError: m_a must be a list

	>>> b = "string"
	>>> a = [[2, 39, 0], [1, 3, 32], [2, 24, 7], [8, 18, 5]]
	>>> matrix_mul(a, b)
	Traceback (most recent call last):
	TypeError: m_b must be a list

	>>> b = [[1, 2], 32]
	>>> a = [[2, 9, 32], [1, 6, 5], [4, 4, 7], [8, 3, 5]]
	>>> matrix_mul(a, b)
	Traceback (most recent call last):
	TypeError: m_b must be a list of lists

	>>> a = []
	>>> b = [[1, 2],[3, 4]]
	>>> matrix_mul(a, b)
	Traceback (most recent call last):
	ValueError: m_a can't be empty

	>>> b = []
	>>> a = [[1, 2],[3, 4]]
	>>> matrix_mul(a, b)
	Traceback (most recent call last):
	ValueError: m_b can't be empty

	>>> b = []
	>>> a = [[1, 2],[3, 4]]
	>>> matrix_mul(a, b)
	Traceback (most recent call last):
	ValueError: m_b can't be empty

	>>> b = [[]]
	>>> a = [[1, 2],[3, 4]]
	>>> matrix_mul(a, b)
	Traceback (most recent call last):
	ValueError: m_b can't be empty

	>>> a = [[]]
	>>> b = [[1, 2],[3, 4]]
	>>> matrix_mul(a, b)
	Traceback (most recent call last):
	ValueError: m_b can't be empty

	>>> a = [[1, 2.456],[2, 3.27386]]
	>>> b = [[1, 2],[3, "6"]]
	>>> matrix_mul(a, b)
	Traceback (most recent call last):
	TypeError: m_b should contain only integers or floats

	>>> a = [[1, 2.456],[2, 3], [32]]
	>>> b = [[1, 2],[3, 4]]
	>>> matrix_mul(a, b)
	Traceback (most recent call last):
	TypeError: each row of m_a must be of the same size

	>>> b = [[1, 2.456],[2, 3], [24]]
	>>> a = [[1, 2],[3, 4]]
	>>> matrix_mul(a, b)
	Traceback (most recent call last):
	TypeError: each row of m_b must be of the same size

	>>> a = [[1, 2],[3, 4]]
	>>> b = [[1, 2, 3],[4, 2, 3],[1, 6, 3]]
	>>> matrix_mul(a, b)
	Traceback (most recent call last):
	ValueError: m_a and m_b can't be multiplied
